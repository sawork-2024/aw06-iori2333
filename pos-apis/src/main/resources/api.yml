openapi: "3.0.0"
info:
  version: 1.0.0
  title: Products
  license:
    name: MIT
paths:
  /product:
    get:
      summary: List all products
      operationId: listProducts
      tags:
        - products
      responses:
        '200':
          description: A paged array of products
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Products"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /product/{productId}:
    get:
      summary: Info for a specific product
      operationId: showProductById
      tags:
        - product
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /categories:
    get:
      summary: List all categories
      operationId: listCategories
      tags:
        - categories
      responses:
        '200':
          description: A paged array of categories
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Categories"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /cart:
    get:
      summary: Get cart information
      operationId: getCart
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
    post:
      summary: Checkout cart and generates order
      operationId: checkout
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cart/{productId}:
    get:
      summary: Get product information
      operationId: getCartItem
      parameters:
        - name: productId
          in: path
          required: true
          description: The id of the product to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
    post:
      summary: Add product to cart
      operationId: addProductToCart
      parameters:
        - name: productId
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
    put:
      summary: Update product quantity in cart
      operationId: updateProductQuantityInCart
      parameters:
        - name: productId
          in: path
          description: Product ID
          required: true
          schema:
            type: string
        - name: quantity
          in: query
          description: Product quantity
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
    delete:
      summary: Remove product from cart
      operationId: removeProductFromCart
      parameters:
        - name: productId
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '404':
          description: Cart not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - cart
components:
  schemas:
    Product:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
          format: double
        category:
          $ref: "#/components/schemas/Category"
    Category:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
    Products:
      type: array
      items:
        $ref: "#/components/schemas/Product"
    Categories:
      type: array
      items:
        $ref: "#/components/schemas/Category"
    Item:
      type: object
      required:
        - product
        - quantity
      properties:
        product:
          type: string
        quantity:
          type: number
    Cart:
      type: array
      items:
        $ref: "#/components/schemas/Item"
    Order:
      type: object
      required:
        - items
        - count
        - remain
        - total
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item"
        count:
          type: number
        total:
          type: number
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string